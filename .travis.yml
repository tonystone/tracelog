language: generic

git:
  submodules: false

matrix:
  include:
    - 
      os: linux
      dist: trusty
      sudo: required
      env: 
         - BUILD="swift build"
    - 
      os: osx
      osx_image: xcode8
      env: 
         - BUILD="swift build"
    -
      os: osx
      osx_image: xcode8
      env: 
         - BUILD="pod lint"
    - 
      os: osx
      osx_image: xcode8
      env: 
         - BUILD="xcodebuild"
         - TEST_DEST="platform=iOS Simulator,OS=10.0,name=iPhone 6s" 
         - TEST_SDK=iphonesimulator
         - SCHEME=TraceLog-iOS-Example 
    - 
      os: osx
      osx_image: xcode8
      env: 
         - BUILD="xcodebuild"
         - TEST_DEST="platform=iOS Simulator,OS=10.0,name=iPhone 6" 
         - TEST_SDK=iphonesimulator
         - SCHEME=TraceLog-iOS-Example 
    - 
      os: osx
      osx_image: xcode8
      env: 
         - BUILD="xcodebuild"
         - TEST_DEST="platform=iOS Simulator,OS=9.3,name=iPhone 6" 
         - TEST_SDK=iphonesimulator
         - SCHEME=TraceLog-iOS-Example 
    - 
      os: osx
      osx_image: xcode8
      env: 
         - BUILD="xcodebuild"
         - TEST_DEST="platform=iOS Simulator,OS=9.2,name=iPhone 5s" 
         - TEST_SDK=iphonesimulator
         - SCHEME=TraceLog-iOS-Example 
    - 
      os: osx
      osx_image: xcode8
      env: 
         - BUILD="xcodebuild"
         - TEST_DEST="platform=iOS Simulator,OS=9.0,name=iPhone 4s" 
         - TEST_SDK=iphonesimulator
         - SCHEME=TraceLog-iOS-Example 
    - 
      os: osx
      osx_image: xcode8
      env: 
         - BUILD="xcodebuild"
         - TEST_DEST="platform=OS X,arch=x86_64" 
         - TEST_SDK=macosx
         - SCHEME=TraceLog-OSX-Example 


before_install:
  #
  # If there is a Gemfile for this os, install bundler and ask bundler to install the gems
  #
  - if [ -e Gemfile."$TRAVIS_OS_NAME" ]; then export BUNDLE_GEMFILE=Gemfile."$TRAVIS_OS_NAME" ; fi
  - if [ -e Gemfile."$TRAVIS_OS_NAME" ]; then gem install bundler ; fi
  - if [ -e Gemfile."$TRAVIS_OS_NAME" ]; then bundler install ; fi

  #
  # Linux requires downloading Swift and tools
  #
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get update -y ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget https://swift.org/builds/swift-3.0-release/ubuntu1404/swift-3.0-RELEASE/swift-3.0-RELEASE-ubuntu14.04.tar.gz    ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then tar xzvf swift-3.0-RELEASE-ubuntu14.04.tar.gz    ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export PATH=swift-3.0-RELEASE-ubuntu14.04/usr/bin:$PATH    ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get -y install clang-3.8 lldb-3.8 libicu-dev  ; fi

script:
  - if [[ "$BUILD" == "swift build"  ]]; then swift test ; fi
  - if [[ "$BUILD" == "pod lint"  ]]; then bundler exec pod lib lint ; fi
  - if [[ "$BUILD" == "xcodebuild" ]]; then xcodebuild clean test -workspace Example/TraceLog.xcworkspace -scheme "$SCHEME" -destination "$TEST_DEST" -sdk "$TEST_SDK" GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES | bundler exec xcpretty ; fi

after_success:
  - bash <(curl -s https://codecov.io/bash)
