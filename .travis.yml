language: generic

git:
  submodules: false

env:
  global:
    - PROJECT=TraceLog.xcodeproj
    - SCHEME=TraceLog-Package

matrix:
  include:
    -
      os: linux
      dist: trusty
      sudo: required
      env:
         - BUILD="swift build"
    -
      os: osx
      osx_image: xcode10
      env:
         - BUILD="swift build"
    -
      os: osx
      osx_image: xcode9.3
      env:
         - BUILD="pod lint"
    -
      os: osx
      osx_image: xcode10
      env:
         - BUILD="xcodebuild"
         - TEST_DEST="platform=iOS Simulator,OS=11.3,name=iPhone 8"
         - TEST_SDK=iphonesimulator
    -
      os: osx
      osx_image: xcode10
      env:
         - BUILD="xcodebuild"
         - TEST_DEST="platform=iOS Simulator,OS=10.3.1,name=iPhone 7"
         - TEST_SDK=iphonesimulator

    -
      os: osx
      osx_image: xcode10
      env:
         - BUILD="xcodebuild"
         - TEST_DEST="platform=iOS Simulator,OS=9.3,name=iPhone 6s"
         - TEST_SDK=iphonesimulator

    -
      os: osx
      osx_image: xcode10
      env:
         - BUILD="xcodebuild"
         - TEST_DEST="platform=OS X,arch=x86_64"
         - TEST_SDK=macosx

before_install:
  #
  # If there is a Gemfile for this os, install bundler and ask bundler to install the gems
  #
  - |
    if [ -e Gemfile ]; then
       export BUNDLE_GEMFILE=Gemfile
       gem install bundler
       bundler install
    fi
    #
    # OSX
    #
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
       # Fix travis issue: https://github.com/travis-ci/travis-ci/issues/6307
       rvm get head --auto-dotfiles || true
       sudo log config --subsystem "xctest" --mode "persist:debug"

       curl -O https://swift.org/builds/swift-5.0-branch/xcode/swift-5.0-DEVELOPMENT-SNAPSHOT-2018-12-20-a/swift-5.0-DEVELOPMENT-SNAPSHOT-2018-12-20-a-osx.pkg
       sudo installer -pkg swift-5.0-DEVELOPMENT-SNAPSHOT-2018-12-20-a-osx.pkg -target /
       export TOOLCHAINS=swift
       swift --version
    fi
  #
  # Linux requires downloading Swift and tools
  #
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        # Workaround for travis issue https://github.com/travis-ci/travis-ci/issues/7332
      sudo rm -rf /etc/apt/sources.list.d/rwky-redis-source.list
      sudo apt-get update -y
      sudo apt-get -y install clang-3.8 lldb-3.8 libicu-dev

      wget https://swift.org/builds/swift-5.0-branch/ubuntu1404/swift-5.0-DEVELOPMENT-SNAPSHOT-2018-12-17-a/swift-5.0-DEVELOPMENT-SNAPSHOT-2018-12-17-a-ubuntu14.04.tar.gz
      tar xzvf swift-5.0-DEVELOPMENT-SNAPSHOT-2018-12-17-a-ubuntu14.04.tar.gz
      export PATH=$(pwd)/swift-5.0-DEVELOPMENT-SNAPSHOT-2018-12-17-a-ubuntu14.04/usr/bin:$PATH
    fi

script:
  - |
    if [[ "$BUILD" == "swift build"  ]]; then
        swift test
    fi
  - |
    if [[ "$BUILD" == "pod lint" ]]; then
        set -e  # Fail (and stop build) on first non zero exit code
        # Currently we can't build using swift 5 under cocoapods.
        export TOOLCHAINS=
        bundler exec pod lib lint
        set +e
    fi
  - |
    if [[ "$BUILD" == "xcodebuild"  ]]; then
        set -e  # Fail (and stop build) on first non zero exit code
        swift package generate-xcodeproj --xcconfig-overrides Package.xcconfig --enable-code-coverage
        xcodebuild -project "$PROJECT" -scheme "$SCHEME" -destination "$TEST_DEST" -sdk "$TEST_SDK" build-for-testing
        xcodebuild -project "$PROJECT" -scheme "$SCHEME" -destination "$TEST_DEST" -sdk "$TEST_SDK" test
        set +e
    fi

after_success:
  - bash <(curl -s https://codecov.io/bash)
