///
///  TextFormat+InternationalLanguagesTests.swift
///
///  Copyright 2018 Tony Stone
///
///  Licensed under the Apache License, Version 2.0 (the "License");
///  you may not use this file except in compliance with the License.
///  You may obtain a copy of the License at
///
///  http://www.apache.org/licenses/LICENSE-2.0
///
///  Unless required by applicable law or agreed to in writing, software
///  distributed under the License is distributed on an "AS IS" BASIS,
///  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
///  See the License for the specific language governing permissions and
///  limitations under the License.
///
///  Created by Tony Stone on 12/31/18.
///
import XCTest

import TraceLog
%{
variants = [
    ("Danish", "da",  "Quizdeltagerne spiste jordbær med fløde, mens cirkusklovnen Wolther spillede på xylofon.", "Quiz contestants were eating strawbery with cream while Wolther the circus clown played on xylophone."),
    ("German", "de",  "Falsches Üben von Xylophonmusik quält jeden größeren Zwerg", "Wrongful practicing of xylophone music tortures every larger dwarf"),
    ("Greek", "el",   "Γαζέες καὶ μυρτιὲς δὲν θὰ βρῶ πιὰ στὸ χρυσαφὶ ξέφωτο", "No more shall I see acacias or myrtles in the golden clearing"),
    ("English", "en", "The quick brown fox jumps over the lazy dog", ""),
    ("Spanish", "es", "El pingüino Wenceslao hizo kilómetros bajo exhaustiva lluvia y frío, añoraba a su querido cachorro.", "Contains every letter and every accent, but not every combination of vowel + acute."),
    ("French", "fr", "Portez ce vieux whisky au juge blond qui fume sur son île intérieure, à côté de l'alcôve ovoïde, où les bûches se consument dans l'âtre, ce qui lui permet de penser à la cænogenèse de l'être dont il est question dans la cause ambiguë entendue à Moÿ, dans un capharnaüm qui, pense-t-il, diminue çà et là la qualité de son œuvre.", ""),
    ("IrishGaelic", "ga", "D'fhuascail Íosa, Úrmhac na hÓighe Beannaithe, pór Éava agus Ádhaimh", ""),
    ("Hungarian", "hu", "Árvíztűrő tükörfúrógép", "flood-proof mirror-drilling machine, only all non-ASCII letters"),
    ("Icelandic", "is", "Kæmi ný öxi hér ykist þjófum nú bæði víl og ádrepa", ""),
    ("Japanese", "jp, ", "いろはにほへとちりぬるをわかよたれそつねならむうゐのおくやまけふこえてあさきゆめみしゑひもせす", ""),
    ("Katakana", "", "イロハニホヘト チリヌルヲ ワカヨタレソ ツネナラム ウヰノオクヤマ ケフコエテ アサキユメミシ ヱヒモセスン", ""),
    ("Polish", "pl", "Pchnąć w tę łódź jeża lub ośm skrzyń fig", "To push a hedgehog or eight bins of figs in this boat"),
    ("Russian", "ru", "чащах юга жил бы цитрус? Да, но фальшивый экземпляр!", "Would a citrus live in the bushes of south? Yes, but only a fake one!"),
    ("Turkish", "tr", "Pijamalı hasta, yağız şoföre çabucak güvendi.", "Patient with pajamas, trusted swarthy driver quickly")
]
}%

/// TextFormat International Languages Tests
///
/// Sentences that contain all letters commonly used in a language
/// --------------------------------------------------------------
///
/// Markus Kuhn <http://www.cl.cam.ac.uk/~mgk25/> -- 2012-04-11
///
class TextFormatInternationalLanguagesTests: XCTestCase {
% for (Language, Abbreviation, Text, English) in variants:

    /// Test that we can encode a "${Language} (${Abbreviation})" message.
    ///
    func testBytesWith${Language}Message() {
        let format = TextFormat(template: "%{message}", encoding: .utf8, terminator: "")

        let input: Writer.LogEntry = (timestamp: 28800.0, level: .info, tag: "TestTag", message: "${Text}", runtimeContext: TestRuntimeContext(processName: "TestProcess", processIdentifier: 100, threadIdentifier: 1100), staticContext: TestStaticContext())
        let expected: String       = "${Text}"

        guard let bytes = format.bytes(from: input)
            else { XCTFail("Failed to convert log entry for the ${Language} language."); return }

        XCTAssertEqual(String(bytes: bytes, encoding: .utf8), expected, "Failed conversion for \"${Language}\".")
    }
% end
}
